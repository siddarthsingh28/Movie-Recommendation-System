[{"C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\index.js":"1","C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\App.js":"3","C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\Components\\Movies.js":"4","C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\Components\\Banner.js":"5","C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\Components\\Navbar.js":"6","C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\Components\\getMovies.js":"7","C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\Components\\Favourite.js":"8"},{"size":507,"mtime":1653748202675,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1653748202677,"results":"11","hashOfConfig":"10"},{"size":770,"mtime":1654070780035,"results":"12","hashOfConfig":"10"},{"size":6475,"mtime":1654056460603,"results":"13","hashOfConfig":"10"},{"size":1036,"mtime":1654070539446,"results":"14","hashOfConfig":"10"},{"size":583,"mtime":1654069557384,"results":"15","hashOfConfig":"10"},{"size":12132,"mtime":1654061004654,"results":"16","hashOfConfig":"10"},{"size":8096,"mtime":1654067552618,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"35s40l",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"21"},"C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\index.js",[],[],[],"C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\reportWebVitals.js",[],[],"C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\App.js",["46","47"],[],"C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\Components\\Movies.js",["48","49","50","51"],[],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class Movies extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            hover:'',\r\n            parr:[1],\r\n            currPage:1,\r\n            movies:[],\r\n            favourites:[]\r\n        }\r\n    }\r\n    loadMoreMovies = async() => {\r\n        let newPage = this.state.currPage+1;\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=5540e483a20e0b20354dabc2d66a31c9&language=en-US&page=${newPage}`);\r\n        let data = res.data\r\n        // console.log(data);\r\n        this.setState({\r\n            movies:[...this.state.movies,...data.results],\r\n            currPage:newPage\r\n        })\r\n    }\r\n    async componentDidMount(){\r\n        //Side effects \r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=5540e483a20e0b20354dabc2d66a31c9&language=en-US&page=${this.state.currPage}`);\r\n        let data = res.data\r\n        // console.log(data);\r\n        this.setState({\r\n            movies:[...data.results]\r\n        })\r\n        let callbackfn = (entries) => {\r\n            if(entries[0].isIntersecting){\r\n                this.loadMoreMovies();\r\n            }\r\n        }\r\n        let loader = document.querySelector(\".infinite-loader\");\r\n        let observer = new IntersectionObserver(callbackfn,{threshold:1.0})\r\n        observer.observe(loader)\r\n    }\r\n    changeMovies=async()=>{\r\n        console.log(\"changemovies called\");\r\n        console.log(this.state.currPage);\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=5540e483a20e0b20354dabc2d66a31c9&language=en-US&page=${this.state.currPage}`);\r\n        let data = res.data\r\n        // console.log(data);\r\n        this.setState({\r\n            movies:[...data.results]\r\n        })\r\n    }\r\n    handleRight=()=>{\r\n        let temparr =[]\r\n        for(let i=1;i<=this.state.parr.length+1;i++){\r\n            temparr.push(i);\r\n        }\r\n        this.setState({\r\n            parr:[...temparr],\r\n            currPage:this.state.currPage+1\r\n        },this.changeMovies)\r\n    }\r\n    handleLeft=()=>{\r\n        if(this.state.currPage!==1){\r\n            this.setState({\r\n                currPage:this.state.currPage-1\r\n            },this.changeMovies)\r\n        }\r\n    }\r\n    handleClick=(value)=>{\r\n        if(value!==this.state.currPage){\r\n            console.log(\"i am called\")\r\n            this.setState({\r\n                currPage:value\r\n            },this.changeMovies)\r\n        }\r\n    }\r\n    handleFavourites=(movie)=>{\r\n        let oldData = JSON.parse(localStorage.getItem(\"movies-app\") || \"[]\")\r\n        if(this.state.favourites.includes(movie.id)){\r\n            oldData = oldData.filter((m)=>m.id!==movie.id)\r\n        }else{\r\n            oldData.push(movie)\r\n        }\r\n        localStorage.setItem(\"movies-app\",JSON.stringify(oldData));\r\n        console.log(oldData);\r\n        this.handleFavouritesState();\r\n    }\r\n    handleFavouritesState=()=>{\r\n        let oldData = JSON.parse(localStorage.getItem(\"movies-app\") || \"[]\")\r\n        let temp = oldData.map((movie)=>movie.id);\r\n        this.setState({\r\n            favourites:[...temp]\r\n        })\r\n    }\r\n    render() {\r\n        // let movie = movies.results\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.movies.length===0?\r\n                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                    </div> : \r\n                    <div>\r\n                        <h3 className=\"text-center\"><strong>Trending</strong></h3>\r\n                        <div className=\"movies-list\">\r\n                            {\r\n                                this.state.movies.map((movieObj)=>(\r\n                                    <div className=\"card movies-card\" onMouseEnter={()=>this.setState({hover:movieObj.id})} onMouseLeave={()=>this.setState({hover:''})}>\r\n                                        <img src={`https://image.tmdb.org/t/p/original${movieObj.backdrop_path}`}  alt={movieObj.title} className=\"card-img-top movies-img\"/>\r\n                                        {/* <div className=\"card-body\"> */}\r\n                                            <h5 className=\"card-title movies-title\">{movieObj.original_title}</h5>\r\n                                            {/* <p class=\"card-text movies-text\">{movieObj.overview}</p> */}\r\n                                            <div className=\"button-wrapper\" style={{display:'flex',width:'100%',justifyContent:'center'}}>\r\n                                            {\r\n                                                this.state.hover === movieObj.id &&\r\n                                                <a className=\"btn btn-primary movies-button\" onClick={()=>this.handleFavourites(movieObj)}>{this.state.favourites.includes(movieObj.id)?\"Remove from favourites\":\"Add to favourites\"}</a>\r\n                                            }\r\n                                            </div>\r\n                                        {/* </div> */}\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        {/* <div className=\"infinite-loader\"style={{display:'flex',justifyContent:'center'}}>\r\n                            <h2>Load More Movies .........................</h2>\r\n                        </div> */}\r\n                        {<div style={{display:'flex',justifyContent:'center'}}> \r\n                        { <nav aria-label=\"Page navigation example\">\r\n                            <ul class=\"pagination\">\r\n                                <li class=\"page-item\"><a class=\"page-link\" onClick={this.handleLeft}>Previous</a></li>\r\n                                {\r\n                                    this.state.parr.map((value)=>(\r\n                                        <li class=\"page-item\"><a class=\"page-link\" onClick={()=>this.handleClick(value)}>{value}</a></li>\r\n                                    ))\r\n                                }\r\n                                <li class=\"page-item\"><a class=\"page-link\" onClick={this.handleRight}>Next</a></li>\r\n                            </ul>\r\n                        </nav> }\r\n                         </div> }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}","C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\Components\\Banner.js",[],[],"C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\Components\\Navbar.js",[],[],[],"C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\Components\\getMovies.js",[],[],"C:\\Users\\HP\\Dropbox\\PC\\Desktop\\React Projects\\movies\\Movie-Recommendation-System\\src\\Components\\Favourite.js",["52","53","54","55","56"],[],"import React, { Component } from 'react';\r\n\r\nexport default class Favourite extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            genres:[],\r\n            currgen:'All Genres',\r\n            movies:[],\r\n            currText:'',\r\n            limit:5,\r\n            currPage:1\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        let genreids = {28:'Action',12:'Adventure',16:'Animation',35:'Comedy',80:'Crime',99:'Documentary',18:'Drama',10751:'Family',14:'Fantasy',36:'History',\r\n                        27:'Horror',10402:'Music',9648:'Mystery',10749:'Romance',878:'Sci-Fi',10770:'TV',53:'Thriller',10752:'War',37:'Western'};\r\n        let data = JSON.parse(localStorage.getItem(\"movies-app\") || \"[]\")\r\n        let temp = []\r\n        data.forEach((movieObj)=>{\r\n            if(!temp.includes(genreids[movieObj.genre_ids[0]])){\r\n                temp.push(genreids[movieObj.genre_ids[0]]);\r\n            }\r\n         })\r\n         temp.unshift('All Genres');\r\n         this.setState({\r\n             genres:[...temp],\r\n             movies:[...data]\r\n         })\r\n    }\r\n    handleGenreChange=(genre)=>{\r\n        this.setState({\r\n            currgen:genre\r\n        })\r\n    }\r\n    sortPopularityDesc=()=>{\r\n        let temp = this.state.movies;\r\n        temp.sort(function(objA,objB){\r\n            return objB.popularity-objA.popularity\r\n        })\r\n        this.setState({\r\n            movies:[...temp]\r\n        })\r\n    }\r\n    sortPopularityAsc=()=>{\r\n        let temp = this.state.movies;\r\n        temp.sort(function(objA,objB){\r\n            return objA.popularity-objB.popularity\r\n        })\r\n        this.setState({\r\n            movies:[...temp]\r\n        })\r\n    }\r\n\r\n    sortRatingDesc=()=>{\r\n        let temp = this.state.movies;\r\n        temp.sort(function(objA,objB){\r\n            return objB.vote_average-objA.vote_average\r\n        })\r\n        this.setState({\r\n            movies:[...temp]\r\n        })\r\n    }\r\n    sortRatingAsc=()=>{\r\n        let temp = this.state.movies;\r\n        temp.sort(function(objA,objB){\r\n            return objA.vote_average-objB.vote_average\r\n        })\r\n        this.setState({\r\n            movies:[...temp]\r\n        })\r\n    }\r\n    handlePageChange=(page)=>{\r\n        this.setState({\r\n            currPage:page\r\n        })\r\n    }\r\n    handleDelete=(id)=>{\r\n        let newarr = [];\r\n        newarr = this.state.movies.filter((movieObj)=>movieObj.id!=id)\r\n        this.setState({\r\n            movies:[...newarr]\r\n        })\r\n        localStorage.setItem(\"movies-app\",JSON.stringify(newarr))\r\n    }\r\n    render() {\r\n        let genreids = {28:'Action',12:'Adventure',16:'Animation',35:'Comedy',80:'Crime',99:'Documentary',18:'Drama',10751:'Family',14:'Fantasy',36:'History',\r\n                        27:'Horror',10402:'Music',9648:'Mystery',10749:'Romance',878:'Sci-Fi',10770:'TV',53:'Thriller',10752:'War',37:'Western'};\r\n        \r\n        let filterarr = [];\r\n\r\n        if(this.state.currText===''){\r\n            filterarr=this.state.movies\r\n        }else{\r\n            filterarr=this.state.movies.filter((movieObj)=>{\r\n                let title = movieObj.original_title.toLowerCase();\r\n                return title.includes(this.state.currText.toLowerCase())\r\n            })\r\n        }\r\n\r\n        // if(this.state.currgen==\"All Genres\"){\r\n        //     filterarr = this.state.movies\r\n        // }\r\n        if(this.state.currgen!=\"All Genres\"){\r\n            filterarr = this.state.movies.filter((movieObj)=>genreids[movieObj.genre_ids[0]]==this.state.currgen)\r\n        }\r\n        let pages = Math.ceil(filterarr.length/this.state.limit);\r\n        let pagesarr = [];\r\n        for(let i=1;i<=pages;i++){\r\n            pagesarr.push(i);\r\n        }\r\n        let si = (this.state.currPage-1)*this.state.limit;\r\n        let ei = si+this.state.limit;\r\n        filterarr = filterarr.slice(si,ei);\r\n        return (\r\n            <div>\r\n                <>\r\n                    <div className=\"main\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3 col-sm-12\">\r\n                            <ul class=\"list-group favourites-genres\">\r\n                                {\r\n                                    this.state.genres.map((genre)=>(\r\n                                        this.state.currgen == genre ?\r\n                                        <li class=\"list-group-item\" style={{background:'black',color:'white',fontWeight:'bold'}} >{genre}</li> :\r\n                                        <li class=\"list-group-item\" style={{background:'white',color:'#3f51b5'}} onClick={()=>this.handleGenreChange(genre)}>{genre}</li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                            </div>\r\n                            <div className=\"col-lg-9 favourites-table col-sm-12\">\r\n                                <div className=\"row\">\r\n                                    <input type=\"text\" className=\"input-group-text col\" placeholder=\"Search\" value={this.state.currText} onChange={(e)=>this.setState({currText:e.target.value})}/>\r\n                                    <input type=\"number\" className=\"input-group-text col\" placeholder=\"Rows Count\" value={this.state.limit} onChange={(e)=>this.setState({limit:e.target.value})}/>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                <table class=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                        <th scope=\"col\">Title</th>\r\n                                        <th scope=\"col\">Genre</th>\r\n                                        <th scope=\"col\"><i class=\"fas fa-sort-up\" onClick={this.sortPopularityDesc}/>Popularity<i class=\"fas fa-sort-down\" onClick={this.sortPopularityAsc}></i></th>\r\n                                        <th scope=\"col\"><i class=\"fas fa-sort-up\" onClick={this.sortRatingDesc}></i>Rating<i class=\"fas fa-sort-down\" onClick={this.sortRatingAsc}></i></th>\r\n                                        <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            filterarr.map((movieObj)=>(\r\n                                                <tr>\r\n                                                    <td><img src={`https://image.tmdb.org/t/p/original${movieObj.backdrop_path}`} alt={movieObj.title} style={{width:'5rem'}}/> {movieObj.original_title}</td>\r\n                                                    <td>{genreids[movieObj.genre_ids[0]]}</td>\r\n                                                    <td>{movieObj.popularity}</td>\r\n                                                    <td>{movieObj.vote_average}</td>\r\n                                                    <td><button type=\"button\" class=\"btn btn-danger\" onClick={()=>this.handleDelete(movieObj.id)}>Delete</button></td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <nav aria-label=\"Page navigation example\">\r\n                                    <ul class=\"pagination\">\r\n                                        {\r\n                                            pagesarr.map((page)=>(\r\n                                                <li class=\"page-item\"><a class=\"page-link\" onClick={()=>this.handlePageChange(page)}>{page}</a></li>\r\n                                            ))\r\n                                        }\r\n                                    </ul>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"57","severity":1,"message":"61","line":6,"column":47,"nodeType":"59","messageId":"60","endLine":6,"endColumn":60},{"ruleId":"62","severity":1,"message":"63","line":117,"column":49,"nodeType":"64","endLine":117,"endColumn":140},{"ruleId":"62","severity":1,"message":"63","line":131,"column":55,"nodeType":"64","endLine":131,"endColumn":102},{"ruleId":"62","severity":1,"message":"63","line":134,"column":63,"nodeType":"64","endLine":134,"endColumn":122},{"ruleId":"62","severity":1,"message":"63","line":137,"column":55,"nodeType":"64","endLine":137,"endColumn":103},{"ruleId":"65","severity":1,"message":"66","line":80,"column":66,"nodeType":"67","messageId":"68","endLine":80,"endColumn":68},{"ruleId":"65","severity":1,"message":"66","line":104,"column":30,"nodeType":"67","messageId":"68","endLine":104,"endColumn":32},{"ruleId":"65","severity":1,"message":"69","line":105,"column":93,"nodeType":"67","messageId":"68","endLine":105,"endColumn":95},{"ruleId":"65","severity":1,"message":"69","line":124,"column":60,"nodeType":"67","messageId":"68","endLine":124,"endColumn":62},{"ruleId":"62","severity":1,"message":"63","line":166,"column":71,"nodeType":"64","endLine":166,"endColumn":134},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='."]